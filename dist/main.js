(()=>{"use strict";function e(e,t,n,l){const d=document.createElement(e);return t&&(d.id=t),n&&n.forEach((e=>d.classList.add(e))),l&&(d.innerText=l),d}function t(){return Math.random().toString().split(".").join("")}const n=document.querySelector("#folders .card");class l{constructor(e){this.title=e,this.id=t(),this.tasks=[]}render(){const t=e("div",this.id,["folder"],null),l=e("dp",null,null,this.title),d=e("img",null,["delete"],null);d.src="./img/stock.jpg",d.addEventListener("click",(()=>{this.delete()})),t.appendChild(l),t.appendChild(d),n.appendChild(t),t.addEventListener("click",(()=>{s=this,s.active=falsethis.renderTasks(),document.querySelectorAll(".folder").forEach((e=>e.classList.value="folder")),document.querySelectorAll(".delete"),deleteBtns.forEach((e=>e.src="./img/stock.jpg")),t.classList.value.includes("active")||(t.classList.add("active"),d.src="./img/stock.jpg")}))}delete(){d=d.filter((e=>e.id!==this.id)),folder.renderFolders()}renderTasks(){document.querySelector("#task-container").innerHTML="",this.tasks.forEach((e=>e.render()))}static renderFolders(){n.innerHTML="",d.forEach((e=>e.render()))}static setCurrentFolder(e){s=e}}let d=[new l("Test Folder")],s=d[0];const i=document.querySelector("#task-container");class r{constructor(e,n,l){this.name=e,this.date=n,this.priority=l,this.id=t()}render(){const t=e("div",this.id,["task"],null),n=e("div",null,["task-name"],null),l=e("input",null,["checkbox"],null);l.type="checkbox";const d=e("p",null,null,this.name),s=e("div",null,["task-info"],null),r=e("p",null,null,this.date),a=e("div",null,["badge"],this.priority),o=e("img",null,["edit"],null);o.src="./img/stock.jpg";const c=e("img",null,["edit"],null);c.src="./img/stock.jpg",c.addEventListener("click",(()=>{this.edit()})),n.appendChild(l),n.appendChild(d),s.appendChild(r),s.appendChild(a),s.appendChild(o),s.appendChild(c),t.appendChild(n),t.appendChild(s),i.appendChild(t),l.addEventListener("change",(()=>{d.classList.toggle("done")})),"important"===this.priority&&a.classList.add("important"),o.addEventListener("click",(()=>{this.delete()}))}delete(){s.tasks=s.tasks.filter((e=>e.id!==this.id)),s.renderTasks()}edit(){const e=document.getElementById("myModal");e.style.display="flex",document.getElementById("form-task-edit").addEventListener("submit",(t=>{if(t.preventDefault(),document.getElementById("task-name-edit"),""===$title.value)return void alert("Task must have a name.");const n=document.getElementById("task-date-edit");if(""===n.value)return void alert("Please choose a deadline.");const l=document.getElementById("task-priority-edit");this.name=$title.value,this.date=n.value,this.priority=l.value,e.style.display="none",s.renderTasks()}))}}document.getElementById("form-folder").addEventListener("submit",(e=>{e.preventDefault();const t=document.getElementById("folder-name");if(""===t.value)return void alert("Project folder must have a name");const n=new l(t.value);d.push(n),t.value="",l.renderFolders(),l.setCurrentFolder(n);let s=document.querySelectorAll(".folder");s[s.length-1].classList.add("active"),s[s.length-1].lastChild.src="./img/stock.jpg"})),document.getElementById("form-task").addEventListener("submit",(e=>{e.preventDefault();const t=document.getElementById("task-name");if(""===t.value)return void alert("Task must have a name");const n=document.getElementById("task-date");if(""===n.value)return void alert("Please choose a deadline.");const l=document.getElementById("task-priority"),d=new r(t.value,n.value,l.value);s.tasks.push(d),d.render()})),l.renderFolders();const a=prompt("What's your first name?");document.querySelector(".user-name").innerText=a||"User"})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,